# seeMatches.Genetic: A function to view observations matched by genetic matching in a "matchit" class object.
# 	Takes a "matchit" object where method = "genetic" or a list of them (e.g. after multiple imputation and matching).
# 	Returns either a vector of strings listing all matched IDs or a random sample of them.
#   	Removes duplicate matches across imputed data sets.

seeMatches.Genetic <- function(x, ID, all = TRUE, n = NULL){
  # x: a data frame or list of data frames produced by matchit().
  # ID: a character class string naming the ID column in your data frame.
  # all: if TRUE, returns all matches. Otherwise, n must be specified.
  # n: number of matches to sample if all = FALSE.
  
  require(rgenoud); require(MatchIt); require(Amelia); require(dplyr)
  
  if(class(x) != "list") x <- list(x)

  matches <- list()
  
  for(i in seq_along(x)){
   	DD <- x[[i]]$model$data
  	MM <- x[[i]]$match.matrix
	nameKey <- cbind(rownames(DD), as.character(DD[,ID]))  %>% as.data.frame(stringsAsFactors = F)
	matchMat <- cbind(rownames(MM), MM) %>% as.data.frame(stringsAsFactors = F)
	matchMat[] <- nameKey$V2[match(unlist(matchMat), nameKey$V1)]
	matches[[i]] <- split(matchMat, f = seq(nrow(matchMat))) %>% 
					lapply(function(z) z[,!is.na(z)]) %>% lapply(sort) %>%
					lapply(function(z) paste(z, collapse = " & ")) %>%
					unlist(use.names = F) %>% sort
	}
  
  matches <- unlist(matches) %>% unique %>% sort

  if(all) matches <- matches else matches <- sample(matches, n)
  invisible(matches); print(matches)
  matchMat <- i <- NULL
  }

# Example: impute, match, and see matches in the "cem" package's LeLonde data. Set unit IDs to random names.
set.seed(123); library(MatchIt); library(cem); library(rgenoud); library(Amelia); library(randomNames); library(dplyr)

data(LeLonde)
LeLonde <- LeLonde %>% mutate(name = randomNames::randomNames(n = nrow(LeLonde), 
                               name.order = "first.last", name.sep = " "))  

# Make a single matchit object, using listwise deletion for missing values.
theta <- as.formula("treated ~ black+hispanic+married+nodegree+age+education+u74+u75+q1")
nonmissing.LeLonde <- LeLonde[complete.cases(LeLonde),]   
matchedData <- matchit(formula = theta, data = nonmissing.LeLonde, method = "genetic")
                                                          
# Make a list of matchit objects from the multiply imputed data frames.                         
imputedData.list <- amelia(LeLonde, m = 2, p2s = F, idvars = "name", 
                           noms = c("black","hispanic","treated","married",
                           "nodegree", "u74","u75","q1"))$imputations

matchedData.list <- list()
for(i in seq_along(imputedData.list)) matchedData.list[[i]] <- matchit(formula = theta, 
                                                                data = imputedData.list[[i]], 
                                                                method = "genetic")


# Use seeMatches with both kinds of lists.
seeMatches.Genetic(matchedData, "name", all = F, n = 20)
seeMatches.Genetic(matchedData.list, "name", all = F, n = 20)

# Output from last run.

# [1] "Andrew Prieto Perez & Charisha Parson"                                 "Alexandria Trujillo & Joseph Garcia"                                  
# [3] "Albert Rocha & Naqaa al-Zaman & Shaahira al-Youssef"                   "Jack Snow & Jordan Gibson"                                            
# [5] "Inaaya al-Sulaiman & Zhahit Balderrama"                                "Jasmine Ellington & Joshua Watkins"                                   
# [7] "Farieha Crowe & Marceen Martell"                                       "Gabriella Avila & Marceen Martell"                                    
# [9] "Levi Gutierrez-Solis & Tiffany Kellogg"                                "Brian Alvarez & James Flyinghawk & Yal Duong"                         
#[11] "Alvin Patterson & Cody Anderson"                                       "Abigail Sanchez & Loan Kunzman & Zsanae Calix"                        
#[13] "Faai Z al-Turay & Kristyn Nguyen & Layhat Chen"                        "Mesha Moore & Siyu Frederick"                                         
#[15] "Cody Reed & Husniyya el-Popal & Raakaan el-Jabara & Saaliha el-Sharaf" "Brittany Gallegos & Kevin Lor"                                        
#[17] "Craig Wells Jr & Roger Lujan-Peinado"                                  "Brandon Alfandi & Darian Gonzales"                                    
#[19] "Isaiah Cradle & Marcos Saldana Spiegle"                                "Khin Chen & Marjory Smithee"                                          

# References
# Jasjeet S. Sekhon. 2011. ``Multivariate and Propensity Score Matching Software with Automated Balance Optimization: The Matching package for R.'' Journal of Statistical Software, 42(7): 1-52. 
# Daniel Ho, Kosuke Imai, Gary King, and Elizabeth Stuart (2007). Matching as Nonparametric Preprocessing for Reducing Model Dependence in Parametric Causal Inference. Political Analysis 15(3): 199-236. http://gking.harvard.edu/files/abs/matchp-abs.shtml
# Honaker, J., King, G., Blackwell, M. (2011). Amelia II: A Program for Missing Data. Journal of Statistical Software, 45(7), 1â€“47. URL http://www.jstatsoft.org/v45/i07/.
